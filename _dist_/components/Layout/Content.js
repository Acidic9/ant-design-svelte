/* src/components/Layout/Content.svelte generated by Svelte v3.29.7 */
import {
	SvelteComponent,
	attr,
	create_slot,
	detach,
	element,
	init,
	insert,
	safe_not_equal,
	transition_in,
	transition_out,
	update_slot
} from "../../../web_modules/svelte/internal.js";

function create_fragment(ctx) {
	let main;
	let current;
	const default_slot_template = /*#slots*/ ctx[4].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[3], null);

	return {
		c() {
			main = element("main");
			if (default_slot) default_slot.c();
			attr(main, "class", /*classes*/ ctx[1]);
			attr(main, "style", /*style*/ ctx[0]);
		},
		m(target, anchor) {
			insert(target, main, anchor);

			if (default_slot) {
				default_slot.m(main, null);
			}

			current = true;
		},
		p(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 8) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[3], dirty, null, null);
				}
			}

			if (!current || dirty & /*classes*/ 2) {
				attr(main, "class", /*classes*/ ctx[1]);
			}

			if (!current || dirty & /*style*/ 1) {
				attr(main, "style", /*style*/ ctx[0]);
			}
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(main);
			if (default_slot) default_slot.d(detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	let { style = undefined } = $$props;
	let { className = undefined } = $$props;

	$$self.$$set = $$props => {
		if ("style" in $$props) $$invalidate(0, style = $$props.style);
		if ("className" in $$props) $$invalidate(2, className = $$props.className);
		if ("$$scope" in $$props) $$invalidate(3, $$scope = $$props.$$scope);
	};

	let classes;

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*className*/ 4) {
			$: $$invalidate(1, classes = ["ant-layout-content", className ? className : false].filter(item => item).join(" "));
		}
	};

	return [style, classes, className, $$scope, slots];
}

class Content extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { style: 0, className: 2 });
	}
}

export default Content;